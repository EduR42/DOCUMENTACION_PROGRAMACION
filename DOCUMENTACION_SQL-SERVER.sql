
 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */ 
--  //***********************************************************************//
--  //---- SIRVE PARA CAMBIAR LA BASE POR DEFAULT ----// 
--  //***********************************************************************//
EXEC sp_defaultdb @loginame='sa', @defdb='IGeoECommerce' 
 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
 


SELECT CURRENT_TIMESTAMP;
-- CON ESTE HACEMOS FILTROS DE DATIME POR CUALQUIER TIPO ->DIA ->MES -> AÑO
SELECT DATEADD(MINUTE, -5, current_timestamp) AS xpFECHA;
select * from xcCarrito 
SELECT current_timestamp - 1   
Select * from xcCarrito  where xpFechaActualizacion < current_timestamp - 30
Select * from xcCarrito  where xpFechaActualizacion  > current_timestamp - 0.083333333

SELECT CURRENT_TIMESTAMP;  

SELECT SYSDATETIME()  
    ,SYSDATETIMEOFFSET()  
    ,SYSUTCDATETIME()  
    ,CURRENT_TIMESTAMP  
    ,GETDATE();




-- SIRVE PARA RENOMBRAR UNA COLUMNA DE UNA TABLA
EXEC sp_RENAME 'TableName.OldColumnName' , 'NewColumnName', 'COLUMN'

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


--  //***************************************************************//
--  //-------- ESTE SCRIPT DESHABILITA LA TECLA ENTER----------------// 
--  //***************************************************************//

-- Primero desabilitar la integridad referencial
 EXEC sp_MSForEachTable 'ALTER TABLE ? NOCHECK CONSTRAINT ALL'
 GO
EXEC sp_MSforeachtable @command1 = "DROP TABLE ?"
-- Ahora volver a habilitar la integridad referencial
 EXEC sp_MSForEachTable 'ALTER TABLE ? CHECK CONSTRAINT ALL'
 GO

  /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
 
--  //***********************************************************************//
--  //---- SIRVE PARA CREAR UN INDICE A UNA COLUMNA DE UNA TABLA ----// 
--  //***********************************************************************//
CREATE INDEX IDX_UNIDADESECONOMICAS_X_CODIGO_SCIAN
ON xcUnidadesEconomicas(xpCodigoSCIAN);


 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
 
--  //***********************************************************************//
--  //---- SIRVE PARA CAMBIAR EL TIPO DE DATO A UNA COLUMNA DE UNA TABLA ----// 
--  //***********************************************************************//

ALTER TABLE table_name 
ALTER COLUMN column_name new_data_type(size);


 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
 
--  //***********************************************************************//
--  //---- SIRVE PARA RESTAURAR EL ORDEN CONSECUTIVO EN OID ----// 
--  //***********************************************************************//

 DBCC CHECKIDENT (xcCorreo, RESEED, 1)


 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

 --  //***********************************************************************//
--  //---- SIRVE PARA ELIMINAR LA COLUMNA DE UNA TABLA ----// 
--  //***********************************************************************//

ALTER TABLE dbo.doc_exb DROP COLUMN column_b;

DROP INDEX ixpEsquemaIEPS_xcArticuloVariante ON xcArticuloVariante;
ALTER TABLE xcArticuloVariante DROP CONSTRAINT FK_xcArticuloVariante_xpEsquemaIEPS;

 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
 --  //*****************************************************************************//
--  //-------- ESTE SCRIPT NOS MUESTRA LAS RELACIONES ENTRE LAS TABLAS ------------// 
--  //*****************************************************************************//
SELECT f.name AS ForeignKey,
OBJECT_NAME(f.parent_object_id) AS TableName,
COL_NAME(fc.parent_object_id,
fc.parent_column_id) AS ColumnName,
OBJECT_NAME (f.referenced_object_id) AS ReferenceTableName,
COL_NAME(fc.referenced_object_id,
fc.referenced_column_id) AS ReferenceColumnName
FROM sys.foreign_keys AS f
INNER JOIN sys.foreign_key_columns AS fc
ON f.OBJECT_ID = fc.constraint_object_id
ORDER  BY TableName
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************//
--  //-------- ESTE SCRIPT NOS MUESTRA LAS RELACIONES QUE TIENE UNA TABLA ------------// 
--  //*****************************************************************************//

SELECT * 
FROM sys.foreign_keys
WHERE referenced_object_id = object_id('xcFormaPago')
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************//
--  //-------- ESTE SCRIPT DESHABILITA/HABILITA TODAS LAS LLAVES FORANEAS DE UNA TABLA ------------// 
--  //*****************************************************************************//

ALTER TABLE MyTable NOCHECK CONSTRAINT ALL
ALTER TABLE MyTable CHECK CONSTRAINT ALL

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************//
--  //-------- ESTE SCRIPT BORRA LLAVE FORENEA / INDICE DE UNA TABLA ------------// 
--  //*****************************************************************************//

ALTER TABLE xcCarrito  DROP CONSTRAINT FK_xcCarrito_xpFormadePago;   
DROP INDEX ixpFormadePago_xcCarrito  ON xcCarrito;  
ALTER TABLE xcCarrito DROP COLUMN xpFormadePago;

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************//
--  //-------- ESTE SCRIPT ES PARA ACTULIZAR EL DATO DE UNA COLUMNA CON INNER JOIN ------------// 
--  //*****************************************************************************//

UPDATE S
SET S.xpFechaCaducidad='2022-03-30 16:59:16.843' 
FROM xcStock S
INNER JOIN xcArticuloVariante AV ON AV.OID = S.xpArticuloVariante
WHERE AV.xpCaduca = 1

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************//
--  //-------- ESTE SCRIPT DA FORMATO DE UN ENTERO A STRING COMPUESTO ------------// 
--  //*****************************************************************************//

		SELECT FORMAT(12, '0000000') as 'Número'

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT ES UN FOREACH POR CADA UNO DE LOS REGISTROS QUE EXITAN EN UNA TABLA ------------// 
--  //*****************************************************************************************************//

		DECLARE @xOidActual int
		DECLARE MY_CURSOR CURSOR 
		  LOCAL STATIC READ_ONLY FORWARD_ONLY
		FOR 
		SELECT DISTINCT OID 
		FROM xcArticuloVariante

		OPEN MY_CURSOR
		FETCH NEXT FROM MY_CURSOR INTO @xOidActual
		WHILE @@FETCH_STATUS = 0
		BEGIN 
			-- === AQUI PODEMOS HACER ALGO CON EL OID DEL REGISTRO === --
			PRINT @xOidActual
			FETCH NEXT FROM MY_CURSOR INTO @xOidActual
		END
		CLOSE MY_CURSOR
		DEALLOCATE MY_CURSOR

/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT NOS MUESTRA TODOS LOS SP QUE EXISTEN EN UNA BD ------------// 
--  //*****************************************************************************************************//
select * from [INFORMATION_SCHEMA].[ROUTINES]
where routine_type='PROCEDURE'

SELECT *
 FROM sysobjects 
 WHERE xtype = 'P'


/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT NOS MUESTRA TODAS LAS VISTAS QUE EXISTEN EN UNA BD ------------// 
--  //*****************************************************************************************************//

SELECT *
 FROM sysobjects 
 WHERE xtype = 'V'

SELECT * 
FROM [INFORMATION_SCHEMA].[VIEWS]


 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT NOS MUESTRA TODAS LAS FUNCIONES QUE EXISTEN EN UNA BD ------------// 
--  //*****************************************************************************************************//

select * from [INFORMATION_SCHEMA].[ROUTINES]
where routine_type='FUNCTION'

 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT CONVIERTE UNA FECHA EN STRING FORMATO 20(2022-09-01 11:38:57)(yyyy-mm-dd hh:mm:ss)------------// 
--  //*****************************************************************************************************//

declare @vFS varchar(50);
set @vFS = (select convert(varchar, getdate(), 20))
select @vFS

 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
--  //*****************************************************************************************************//
--  //-------- ESTE SCRIPT HACE UN UDATE EN UNA TABLA CON LEFT JOIN ------------// 
--  //*****************************************************************************************************//
UPDATE
    A
SET
    A.xpNombre = DP.xpNombre,
	A.xpAPaterno = DP.xpApellidoPaterno,
	A.xpAMaterno = DP.xpApellidoMaterno,
	A.xpGenero = DP.xpGenero,
	A.xpFechaNacimiento = DP.xpFechaNacimiento
FROM 
    xcAlumno A
    INNER JOIN xcDatosPersonales DP ON A.xpUsuario = DP.xpUsuario;



	
 /* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */